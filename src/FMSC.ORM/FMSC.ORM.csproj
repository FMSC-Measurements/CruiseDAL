<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--we could probably target net35 but im using net40 as the minimum because 'dotnet' cli only supports down to net40-->
    <!--and i want dotnet cli to run test in the cli to test all target frameworks-->
    <TargetFrameworks>net40;netstandard2.0</TargetFrameworks>
    <Version>2.3.1</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <DefineConstants>SYSTEM_DATA_SQLITE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>MICROSOFT_DATA_SQLITE</DefineConstants>
  </PropertyGroup>

  <!--Required for System.Data.Sqlite See: https://stackoverflow.com/questions/32639630/sqlite-interop-dll-files-does-not-copy-to-project-output-path-when-required-by-r/32639631#32639631-->
  <PropertyGroup Condition="$(DefineConstants.Contains(SYSTEM_DATA_SQLITE))">
    <ContentSQLiteInteropFiles>true</ContentSQLiteInteropFiles>
    <CopySQLiteInteropFiles>false</CopySQLiteInteropFiles>
    <CleanSQLiteInteropFiles>false</CleanSQLiteInteropFiles>
    <CollectSQLiteInteropFiles>false</CollectSQLiteInteropFiles>
  </PropertyGroup>

  <ItemGroup Condition="$(DefineConstants.Contains(SYSTEM_DATA_SQLITE))">
    <PackageReference Include="System.Data.SQLite.Core" Version="1.0.110" />
  </ItemGroup>

  <ItemGroup Condition="$(DefineConstants.Contains(MICROSOFT_DATA_SQLITE))">
    <PackageReference Include="Microsoft.Data.Sqlite" Version="2.2.3" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Backpack.SqlBuilder" Version="1.1.1.31" />
  </ItemGroup>
</Project>