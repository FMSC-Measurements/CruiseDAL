--make sure that new sample groups line up with old samplegroups



update tree 
set stratum_CN = @destStratum,
sampleGroup_CN = (select result.SampleGroup_CN FROM samplegroup as result WHERE result.Stratum_CN = @destStratum AND result.Code =(select Code FROM SampleGroup AS t1 WHERE t1.SampleGroup_CN = Tree.SampleGroup_CN))
where tree.CuttingUnit_CN = @srcUnit
AND tree.Stratum_CN = @scrcStratum
AND EXISTS (select result.SampleGroup_CN FROM samplegroup as result WHERE result.Stratum_CN = @destStratum AND result.Code = (select Code FROM SampleGroup AS t1 WHERE t1.SampleGroup_CN = Tree.SampleGroup_CN));

--update tree 
--set stratum_CN = @destStratum,
--sampleGroup_CN = @destSg
--where tree.CuttingUnit_CN = @srcUnit
--AND tree.Stratum_CN = @scrcStratum
--AND tree.SampleGroup_CN = @srcSg;

update plot
set stratum_CN = @destStratum
where Stratum_CN = @scrcStratum
and CuttingUnit_CN = @srcUnit;

update CuttingUnitStratum
SET Stratum_CN = @destStratum
WHERE Stratum_CN = @scrcStratum
AND CuttingUnit_CN = @srcUnit;

select * from Tree as t
LEFT JOIN CuttingUnitStratum AS cust using (CuttingUnit_CN, Stratum_CN)
WHERE cust.RowID IS NULL;

select * from Plot as p
LEFT JOIN CuttingUnitStratum AS cust using (CuttingUnit_CN, Stratum_CN)
WHERE cust.RowID IS NULL;

select * from Tree as t
LEFT JOIN SampleGroupTreeDefaultValue AS sgtdv using (SampleGroup_CN, TreeDefaultValue_CN)
WHERE sgtdv.RowID IS NULL;

--pragma foreign_key_check;

--select SampleGroup.Code, cuttingUnit_CN, tree.Stratum_CN from tree 
--join SampleGroup using (SampleGroup_CN)
--where SampleGroup.Stratum_CN = 1
--group by SampleGroup.code, Tree.Stratum_CN;