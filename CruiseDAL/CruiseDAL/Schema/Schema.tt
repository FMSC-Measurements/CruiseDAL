<#@ template language="C#v3.5"  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ Assembly Name="C:\tmp\CruiseDAL.CodeGenEngine.exe" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="FMSCORM.CodeGenEngine" #> 
<#
DataDictionaryReader dr = new DataDictionaryReader();

#>

using System;

namespace CruiseDAL.Schema
{
<#
List<String> tableNames = new List<String>();
PushIndent("\t");
foreach(TableCollection tc in dr.TableCollections)
{
	WriteLine("#region " + tc.Name);
	foreach(Table curTable in tc)
	{
		if(curTable.IsDepreciated == true) { continue; }
		MakeSchemaClass(curTable);
		tableNames.Add("\"" + curTable.Name + "\"");
	}
	WriteLine("#endregion");
}
PopIndent();
//WriteLine("}");

#>

	public static partial class Schema
	{
		public static String[] TABLE_NAMES = { <#=String.Join(",", tableNames.ToArray())#> };
	}
}

<#+
        public void MakeSchemaClass(Table table)
        {
            WriteLine("public static class {0}", table.Name.ToUpper());
            WriteLine("{");
            this.PushIndent("\t");
            WriteLine("public const string _NAME = \"{0}\";", table.Name);
            foreach(Field f in table.Fields)
            {
                WriteLine("public const string {0} = \"{1}\";", f.Name.ToUpper(), f.Name);
            }
            String[] quoteEnclosedFieldNames = (from Field f in table.Fields select "\"" + f.Name + "\"").ToArray();
            String[] fieldNames = (from Field f in table.Fields select  f.Name).ToArray();
            String[] upperFieldNames = (from Field f in table.Fields select  f.Name.ToUpper()).ToArray();
            WriteLine("public static string[] _ALL = {{ {0} }};", String.Join(", ", upperFieldNames));
            
            WriteLine("public enum {0}_FIELDS {{ {1} }};", table.Name.ToUpper(), String.Join(", ", fieldNames)); 
            PopIndent();
            WriteLine("}\n");
        }
 #>

