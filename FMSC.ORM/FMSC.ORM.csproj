<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--<TargetFramework>netstandard2.0</TargetFramework>-->
    <TargetFrameworks>net40;netstandard2.0</TargetFrameworks>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo><!--Dont generate assembly info because we will use same assembly info from VS2008--> 
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Authors>Ben Campbell</Authors>
    <Version>2.0.0.4</Version>
  </PropertyGroup>
    
  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <DefineConstants>SYSTEM_DATA_SQLITE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>MICROSOFT_DATA_SQLITE</DefineConstants>
  </PropertyGroup>

  <!--Required for System.Data.Sqlite See: https://stackoverflow.com/questions/32639630/sqlite-interop-dll-files-does-not-copy-to-project-output-path-when-required-by-r/32639631#32639631-->
  <PropertyGroup Condition="$(DefineConstants.Contains(SYSTEM_DATA_SQLITE))">
    <ContentSQLiteInteropFiles>true</ContentSQLiteInteropFiles>
    <CopySQLiteInteropFiles>false</CopySQLiteInteropFiles>
    <CleanSQLiteInteropFiles>false</CleanSQLiteInteropFiles>
    <CollectSQLiteInteropFiles>false</CollectSQLiteInteropFiles>
  </PropertyGroup>

  <ItemGroup Condition="$(DefineConstants.Contains(SYSTEM_DATA_SQLITE))">
    <PackageReference Include="System.Data.SQLite.Core" Version="1.0.108" />
  </ItemGroup> 

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="Microsoft.Data.Sqlite.Core" Version="2.0.0" />
    <PackageReference Include="SQLitePCLRaw.bundle_green" Version="1.1.9" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="NetCF\**" />
    <EmbeddedResource Remove="NetCF\**" />
    <None Remove="NetCF\**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SqlBuilder\SqlBuilder.csproj" />
  </ItemGroup>
  
</Project> 